/*
3面
对面那里吵的很，都不能找个安静的环境，沙比，后面还有人打棒球的声音。
还说我这里觉得吵，让我(laozi)戴耳机 shabi

项目模块(10min 35s)

介绍项目，遇到的难点，项目的技术点，项目中遇到的困难，并没有深问
(我多回答了一点项目的提升 空间)。
和网上的类似软件怎么这么像(有点怀疑不是我我写的)

面试官 二话不说直接上代码：我都好奇出2,3道lc 能咋，非搞些花里胡哨的


(15in左右结束)
1. 求x的根号下的值，精确到小数点后5位 (多做题的话，就肯定知道是浮点数二分)


------------------------    关于二分        ------------------------------
在这里我想说，二分其实真的很难，不仅仅是一个模板的问题， 要设计到好多种情况，最后的边界处理，如果不刷题的话，
那肯定只会一个 二分中求target的下标，别的场景下，如果做对的话，60%的几率都是巧合，(个别测试用例下的)，二分的边界
特别多，也复杂(我认为的)

简单举例 比如：
    arr[] = {1,2,3,5,5,5,5,7,8};
    1.找出第一个5，最后一个5的下标(用两个模板)，
    2.找出9出现的位置(最后的边界处理)
    
经典题目(切木棍，最小值最大的情况)

1). 最小值最大的情况    
模板：
    while(l < r)
    {
        int mid = (l + r) / 2;
        if(arr[mid] >= target)
            r = mid;
        else
            l = mid + 1；
    }
    //在这里 l = r 时退出， 但是l不一定是答案，需要判断
    
2). 最大值最小的情况
    while(l < r)
    {
        int mid = (l + r + 1) / 2; // 注意这里要+1
        if(target >= arr[mid])
            l = mid;
        else
            r = mid - 1;
    }
    // 同理 。。。。
    
3). 浮点二分
     浮点二分的时候，要注意 渐进的时候是 l = mid 或者 r = mid
------------------------  分界线     ----------------------------------------

代码3,4分钟写出来了，但是运行超时，二分能运行超时，我当时就惊呆了，从来没在lc上碰见超时的二分，
debug, 在这里推荐大家首先不要用编译器debug，要习惯用万能的 cout 调试， 将不确定的边界的值打印出来。我的代码是这样的
供大家参考(是错误的)

const int N = 1e-6;
int main()
{
    int n = 0;
    cin >> n;
    double l = 0;  //
    double r = n; // 
    
    while(r - l > 1ll*N)
    {
        double mid = (l + r) / 2;
        if(mid * mid >= n)
            r = mid;
        else 
            l = mid;
    }
    printf("%.5ld\n", l);
}

绝对没问题啊，写出来就3,4min，但是我调试花了7,8min, 我吧所有的l,r 都打印出来，发现没有问题，最后都逼近到一个值，
但是while循环没有结束，精确到5位小数，我也开了1e-6, 绝对没有问题，我还和面试官说编译器有问题，面试官好像也
发现了，这5min,我只能将double r = 1ll*n, 这样慢慢试，看哪里的错误，最后才改出来，将 const int N  换成 
const double N 就成功了。 

给面试官解释 当时我调试的过程，以及发现问题的过程，怎么解决的

(25min)
2. 求比n大的最小回文数， 12311 的 最小回文是 12321  就这样类似
    
我先说了暴力解法，显然它不是让你暴力求解的。

然后面试官让我 说更好思路，先让我写几个测试用例，尽力测试全这个数据，
我: 首先分奇数偶数，将前面一般逆置 与后一半比较，看大小关系，然后 再做处理， 2*2 = 4中情况
面试官：还有吗，就这？
我：emm, 会不会出现前置0的问题，哦，不会出现。 那没有了
面试官： 你之前做过类似题是吧？
我： 针没做过(要是做，这假如在lc上暴力肯定也能过啊)
面试官： 那你写吧，强调了：把你的代码将所有的测试用例全部覆盖完，还说现在是几点几分，(计时的意思更加恐慌让我）
我心沉了一下 就开始了

string func(int n)
{
    string s = to_string(n);
    int s_len = s.size();
    string ans; //存答案
    
    if(n < 9)
    {
        return ans = to_string(n + 1);
    }
    
    if(s.size() % 2) // 奇数
    {
        // 拆分
        string s1 = s.substr(0, s_len / 2);
        string s2 = s.substr(s_len / 2 + 1);
        // 翻转 s1 
        if(s1(reverse之后的) > s2) // 进行比较
        {
            直接 ans = s1 + s[mid] + reverse之后的s1;
        }
        else // 小于的情况
        {
             // 分情况， 中间的数 是 < '9' 还是 >= '9'
             
             //1)＜的话， 那么返回的ans = s1 + (s[mid] + '1') + reverse之后的(s1);
             
             // 23976
             
             // 63999
             // 2)> 的话  现在的情况是， s[mid] = '9', 且 revese之后的(s1) 小于 s2
                //分情况
                 
                 //1)). s[0] < '9'
                     就是 ans =   n 个 s[0] + '1';
                  
                 //2)).
                     就是 ans =  n + 1 个 '1'
        }
    }
    else // 偶数
    {
        // 略
    }
}

写了70行代码 + debug 用了 20min, 最后对于某些用例运行出正确的结果(这种也好调试，因为都是在if else中的)，因为写的快，条件分的多，中间肯定有些处理不是很完善，
但是时间已经用了20min，面试官显然很不满意的看着我，(我感觉这分的情况太多了，20min还得运行的完善)

面试官说我思路很清晰，但是没有运行出来(感觉没戏了已经)

接下来就是 介绍部门情况

提问： 那我就指出来一面面试官的关于epoll的错误情况，就是从内核到用户的拷贝，不是利用共享内存，
    下去根据 蛋哥提示，看看源码，给面试官指出来就很爽。
    
体验： 写代码的时候，他那边吵的很，估计是在他们室内运动场找个喝咖啡的地方面试的吧

*/